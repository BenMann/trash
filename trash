#!/usr/bin/env bash

VERSION="1.0.0"
TRASH_DIR=$([[ ! -z "$TRASH_DIR" ]] && echo "$TRASH_DIR" || echo "$HOME/.trash-runner")
PLUGIN_DIR="$TRASH_DIR/plugins"

##
## Init function to create a taskfile for configuring projects
##
function init {
  if [[ -f taskfile ]]; then
    echo $(tput setaf 2) "ðŸ—‘: taskfile already exists..."
    exit 0
  else
    echo $(tput setaf 2) "ðŸ—‘: Creating new taskfile ($(pwd))"
    echo '#!/usr/bin/env bash

# Use `plug $plugin-name` to require plugins

# To run this task, call: $ trash moo
function moo {
  echo "          (__)"
  echo "          (oo)    MOO!"
  echo "   /-------\/ "
  echo "  / |     ||"
  echo " *  ||----||"
  echo "    ^^    ^^"
}
' >> taskfile
    exit 0
  fi
}

##
## Help function to display on console
##
function _help {
cat <<EOF
$(tput setaf 2)
  _____ ___    _     ___ _  _
 |_   _| _ \  /_\   / __| || |
   | | |   / / _ \ _\__ \ __ |
   |_| |_|_\/_/ \_(_)___/_||_|
$(tput setaf 7)
  Version: $VERSION
  Usage: trash [task] [params]
  Default tasks:
    - init: create a scriptable taskfile in this directory
    - list: list available tasks in the current taskfile

EOF
  exit 0
}


##
## List all available tasks in the taskfile
## ignore lib functions (that start with underscore eg. _main)
##
function list {
  echo $(tput setaf 2) "ðŸ—‘: Available tasks:" $(tput setaf 7)
  typeset -f | awk '/ \(\) $/ && !/^_.*|^trash_.*|plug / {print $1}'
  exit 0
}

##
## Easily load plugins with "plug $name"
##
function plug {
  if [[ -z $1 ]]; then
    echo $(tput setaf 2) "ðŸ—‘ Warning: plug was called without a specified plugin."
    return
  fi

  pluginFile=$(find -L "$PLUGIN_DIR" -type f -name "$1" | head -1)
  if [[ -z $pluginFile ]]; then
    echo $(tput setaf 2) "ðŸ—‘  Warning: plugin $1 not found in $PLUGIN_DIR."
  else
    source "$pluginFile"
  fi
}


function _main {
  if [[ ! -d $PLUGIN_DIR ]]; then
    echo $(tput setaf 2) "ðŸ—‘: Atempting to cerate plugin directory ($PLUGIN_DIR)."
    mkdir -p "$PLUGIN_DIR"
    if [[ $? != "0" ]]; then
      echo $(tput setaf 2) "ðŸ—‘: Unable to create plugin directory ($PLUGIN_DIR!)."
      exit 1
    fi
  fi

  if [ $# == 0 -o "$1" == "help" ]; then
    _help
  fi

  if [[ "$1" == "init" ]]; then
    init
  fi

  if [[ -f taskfile ]]; then
    source taskfile
    eval "$@"
    exit 0
  else
    echo -e "ðŸ—‘: No taskfile found, exiting."
    echo -e "ðŸ—‘: You can create a taskfile by running: $ trash init."
    exit 1
  fi

  exit 0
}

# Go!
_main "$@"